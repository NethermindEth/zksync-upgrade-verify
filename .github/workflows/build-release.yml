name: Create Release with Compiled Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir -p releases
          cp target/${{ matrix.target }}/release/zksync-upgrade-verify releases/zksync-upgrade-verify-${{ matrix.target }}-${{ github.ref_name }}

      - name: Upload release assets
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-binary
          path: releases/zksync-upgrade-verify-${{ matrix.target }}-${{ github.ref_name }}

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          path: releases

      - name: Upload assets to release
        uses: softprops/action-gh-release@v1
        with:
          files: releases/*
          token: ${{ secrets.GITHUB_TOKEN }}
